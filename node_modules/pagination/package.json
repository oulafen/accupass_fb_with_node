{
  "name": "pagination",
  "description": "Pagination for javascript/nodejs",
  "keywords": [
    "pagination",
    "nodejs",
    "client"
  ],
  "author": {
    "name": "Nguyen Van Nhu"
  },
  "homepage": "https://github.com/vanng822/pagination",
  "contributors": [],
  "dependencies": {},
  "devDependencies": {
    "vows": "*",
    "ejs": "*",
    "uglify-js": "*",
    "commander": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vanng822/pagination.git"
  },
  "version": "0.4.0",
  "scripts": {
    "test": "vows --spec tests/*"
  },
  "bugs": {
    "url": "https://github.com/vanng822/pagination/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/vanng822/pagination/blob/master/LICENSE"
    }
  ],
  "readme": "## pagination\n\nPagination for javascript/nodejs\n\n[![build status](https://secure.travis-ci.org/vanng822/pagination.png)](http://travis-ci.org/vanng822/pagination)\n\n\n## usage example\n\n\tvar pagination = require('pagination');\n\tvar paginator = pagination.create('search', {prelink:'/', current: 1, rowsPerPage: 200, totalResult: 10020});\n\tconsole.log(paginator.render());\n\n### OR\n\n\tvar pagination = require('pagination');\n\tvar paginator = new pagination.SearchPaginator({prelink:'/', current: 10, rowsPerPage: 200, totalResult: 10020});\n\tconsole.log(paginator.render());\n\t\n\t// output (without newlines)\n\t<div class=\"paginator\">\n\t\t<a href=\"/?page=9\" class=\"paginator-previous\">Previous</a>\n\t\t<a href=\"/?page=8\" class=\"paginator-page paginator-page-first\">8</a>\n\t\t<a href=\"/?page=9\" class=\"paginator-page\">9</a>\n\t\t<a href=\"/?page=10\" class=\"paginator-current\">10</a>\n\t\t<a href=\"/?page=11\" class=\"paginator-page\">11</a>\n\t\t<a href=\"/?page=12\" class=\"paginator-page paginator-page-last\">12</a>\n\t\t<a href=\"/?page=11\" class=\"paginator-next\">Next</a>\n\t</div>\n\n### OR \n\n\tvar pagination = require('pagination');\n\tvar paginator = new pagination.ItemPaginator({prelink:'/', slashSeparator: true, current: 3, rowsPerPage: 200, totalResult: 10020});\n\tconsole.log(paginator.render());\n\t\n\t// output (without newlines)\n\t<div class=\"paginator\">\n\t\t<span class=\"paginator-current-report\">Results 401 - 600 of 10020</span>\n\t\t<a href=\"/page/1\" class=\"paginator-first\">First</a>\n\t\t<a href=\"/page/2\" class=\"paginator-previous\">Previous</a>\n\t\t<a href=\"/page/4\" class=\"paginator-next\">Next</a>\n\t\t<a href=\"/page/51\" class=\"paginator-last\">Last</a>\n\t</div>\n\n### OR need data from the calculation\n\n\tvar pagination = require('pagination');\n\tvar paginator = new pagination.SearchPaginator({prelink:'/', current: 3, rowsPerPage: 200, totalResult: 10020});\n\tconsole.log(paginator.getPaginationData());\n\t\n\t// output\n\t{ prelink: '/',\n\t  current: 3,\n\t  previous: 2,\n\t  next: 4,\n\t  first: 1,\n\t  last: 51,\n\t  range: [ 1, 2, 3, 4, 5 ],\n\t  fromResult: 401,\n\t  toResult: 600,\n\t  totalResult: 10020,\n\t  pageCount: 51 }\n\t  \n## Pagination on client side\n\t<html>\n\t\t<head>\n\t\t<script src=\"../release/pagination.full.min.js\"></script>\n\t\t</head>\n\t\t<body>\n\t\t\t<div id=\"paging\"></div>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t(function() {\n\t\t\t\tvar paginator = new pagination.ItemPaginator({prelink:'/', current: 3, rowsPerPage: 200, totalResult: 10020});\n\t\t\t\tvar html = paginator.render();\n\t\t\t\tvar paginator = pagination.create('search', {prelink:'/', current: 1, rowsPerPage: 200, totalResult: 10020});\n\t\t\t\thtml += paginator.render();\n\t\t\t\tdocument.getElementById(\"paging\").innerHTML = html;\n\t\t\t})();\n\t\t\t</script>\n\t\t</body>\n\t</html>\n\nYou can browse example folder for more. Release folder contains all mimified versions for browser. To customize your need you can use ./bin/build.js -h\n\n## Classes\n### SearchPaginator(options)\n* `options` See Options bellow\n\nSee also http://developer.yahoo.com/ypatterns/navigation/pagination/search.html\n\n### ItemPaginator(options)\n* `options` See Options bellow\n\nSee also http://developer.yahoo.com/ypatterns/navigation/pagination/item.html\n\n### TemplatePaginator(options)\n* `options` See Options bellow\n\nThis class will render the markup as desired. The options must contains property \"template\"\nIt can be either a template string or a compiled template. The local variables available in the template are\n\n* `prelink` String\n* `preparedPreLink` String\n* `current` Integer\n* `previous` Integer\n* `next` Integer\n* `first` Integer\n* `last` Integer\n* `range` Array\n* `fromResult` Integer\n* `toResult` Integer\n* `totalResult` Integer\n* `pageCount` Integer\n* `translations` Object with properties NEXT, PREVIOUS, FIRST, LAST, CURRENT_PAGE_REPORT\n\n## API\n### Paginator.getPaginationData()\nReturn an object contains data for rendering markup. See example above.\n\n### Paginator.set(option, value)\nSet value to a single for option. See options section bellow\n\n### Paginator.preparePreLink(prelink)\n* `prelink` String\n\nAppend page param to the link\n\n### Paginator.render()\nReturn the rendered markup\n\n### pagination.create(type, options)\n* `type` String\n* `options` Object see Options section bellow\n\nWrapper for create instance of classes above\n\n### pagination.TemplateEngine.parse(str, options)\nSee pagination.TemplateEngine.compile bellow\n\n### pagination.TemplateEngine.compile(str, options)\n* `str` Template string\n* `options` object which can contains .open .close .cache and .id\n\n## Options\nObject to pass to paginator classes (second argument when using create function)\n\n### totalResult: {Integer}\nNumber of total items in result set\n\t\n### prelink: {String}\nLink to append the page-param\n\n### rowsPerPage: {Integer}\nNumber of items per page, default to 10\n\n### pageLinks: {Integer}\nNumber of links to create in page range, default to 5. This value will be ignored when using item pagination.\n\n### current: {Integer}\nIndicate which page is the current one. Page always starts with 1.\n\n### translationCache: {Boolean}\nTo indicate if the result from CURRENT_PAGE_REPORT translation can be cached or not. Default is false.\nThe cache is global and will be the same for all instances which have specified translationCacheKey as bellow.\n\n### translationCacheKey: {String}\nFor supporting multiple versions of translation of CURRENT_PAGE_REPORT. It can use for multilanguages or different formats. Default is \"en\"\n\n### translator: {Function}\nFor translations of FIRST, NEXT, ... Simple example\n\n\tvar translations = {\n\t\t'PREVIOUS' : 'Voorgaand',\n\t\t'NEXT' : 'Volgende',\n\t\t'FIRST' : 'Eerst',\n\t\t'LAST' : 'Laatste',\n\t\t'CURRENT_PAGE_REPORT' : 'Resulten {FromResult} - {ToResult} van {TotalResult}'\n\t};\n\t\n\tvar item = new ItemPaginator({\n\t\tprelink : '/',\n\t\tpageLinks : 5,\n\t\tcurrent : 5,\n\t\ttotalResult : 100,\n\t\ttranslator : function(str) {\n\t\t\treturn translations[str];\n\t\t}\n\t});\n\n### pageParamName: {String}\nThe name of the page parameter. Default is \"page\"\n\n### slashSeparator: {Boolean}\nIndicate if using slash instead of equal sign, ie /page/2 instead of /?page=2, default is false.\n\n### template: {String | Function}\nThis can be a template string or a compiled template (function).\nThe compiled function will be called with an object as argument.\n",
  "readmeFilename": "README.md",
  "_id": "pagination@0.4.0",
  "dist": {
    "shasum": "a8368d2a4b828ed24165c738b6b6b0f4a36b1b1b"
  },
  "_from": "pagination@",
  "_resolved": "https://registry.npmjs.org/pagination/-/pagination-0.4.0.tgz"
}
