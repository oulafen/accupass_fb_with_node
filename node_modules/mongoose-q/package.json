{
  "name": "mongoose-q",
  "version": "0.0.9",
  "description": "kriskowal's Q support for mongoose",
  "author": {
    "name": "Dongsu Jang",
    "email": "iolothebard@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://git@github.com/iolo/mongoose-q.git"
  },
  "license": "MIT",
  "engines": {
    "node": "~0.10"
  },
  "dependencies": {
    "q": "~1.0.0",
    "mongoose": "~3.8.3"
  },
  "devDependencies": {
    "nodeunit": "latest",
    "pow-mongodb-fixtures": "latest",
    "grunt": "latest",
    "grunt-contrib-jshint": "latest",
    "grunt-contrib-nodeunit": "latest"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/mongoose_q",
  "readme": "mongoose-q\n==========\n\n[kriskowal's Q](http://documentup.com/kriskowal/q/) support for [mongoose](http://mongoosejs.com).\n\nfor [mongodb native nodejs driver](http://mongodb.github.io/node-mongodb-native/), see [mongo-q](http://github.com/iolo/mongo-q).\n\nusage\n-----\n\n* to apply Q with default suffix 'Q':\n\n```javascript\nvar mongoose = require('mongoose-q')(require('mongoose'));\n// verbose way: mongooseQ is unused\nvar mongoose = require('mongoose'),\n    mongooseQ = require('mongoose-q')(mongoose)\n// shortest way: mongoose will be loaded by mongoose-q\nvar mongoose = require('mongoose-q')();\n```\n\n* use Q-applied `model` statics:\n\n```javascript\nSomeModel.findByIdQ(....blahblah...)\n  .then(function (result) { ... })\n  .fail(function (err) { ... })\n  .done();\n```\n\n* use Q-applied `model` methods:\n\n```javascript\nvar someModel = new SomeModel(...);\nsomeModel.populateQ()\n  .then(function (result) { ... })\n  .fail(function (err) { ... })\n  .done();\n```\n\n* use Q-applied `query` methods:\n\n```javascript\nSomeModel.find(...).where(...).skip(...).limit(...).sort(...).populate(...)\n  .execQ() // no 'Q' suffix for model statics except for execQ()\n  .then(function (result) { ... })\n  .fail(function (err) { ... })\n  .done();\n```\n\n* to apply Q with custom `suffix`/`prefix`:\n\n```javascript\nvar mongoose = require('mongoose-q')(require('mongoose'), {prefix:'promiseOf_', suffix:'_withQ'});\nSomeModel.promiseOf_findAndUpdate_withQ(...)\n  .then(function (result) { ... })\n  .fail(function (err) { ... })\n  .done();\n```\n\n* to apply Q with custom name `mapper`:\n\n```javascript\nfunction customMapper(name) {\n  return 'q' + name.charAt(0).toUpperCase() + name.substring(1);\n}\nvar mongoose = require('mongoose-q')(require('mongoose'), {mapper:customMapper});\nSomeModel.qFindAndUpdate(...)\n  .then(function (result) { ... })\n  .fail(function (err) { ... })\n  .done();\n```\n\n* to apply Q with `spread`:\n\n```javascript\nvar mongoose = require('mongoose-q')(require('mongoose'), {spread:true});\nSomeModel.updateQ(...)\n  .spread(function (affectedRows, raw) { ... })\n  .fail(function (err) { ... })\n  .done();\nSomeModel.updateQ(...)\n  .then(function (result) { var affectedRows = result[0], raw = result[1]; ... })\n  .fail(function (err) { ... })\n  .done();\n...\nvar model = new SomeModel();\n...\nmodel.saveQ()\n  .spread(function (savedDoc, affectedRows) { ... })\n  .fail(function (err) { ... })\n  .done();\n...\nmodel.saveQ()\n  .then(function (result) { var savedDoc = result[0], affectedRows = result[1]; ... })\n  .fail(function (err) { ... })\n  .done();\n```\n> NOTE: without `spread` option(by default), you can access only the first result with `then`!!\n\n* to define custom statics/instance methods using Q\n\n```javascript\nSomeSchema.statics.findByName = function (name) {\n  return this.findQ({name: name}); // NOTE: returns Promise object.\n};\n...\nvar SomeModel = mongoose.model('Some', SomeSchema);\nSomeModel.findByName('foo').then(function(result) {\n  console.log(result);\n});\n```\n> NOTE: this is not a feature of mongoose-q\n\nThat's all folks!\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/iolo/mongoose-q/issues"
  },
  "homepage": "https://github.com/iolo/mongoose-q",
  "_id": "mongoose-q@0.0.9",
  "dist": {
    "shasum": "3f7c65d77c579cc5f3d5828b70a7f647cfd9921e"
  },
  "_from": " mongoose-q@*",
  "_resolved": "https://registry.npmjs.org/mongoose-q/-/mongoose-q-0.0.9.tgz"
}
